name: Build and Push to ECR

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest  # Use GitHub-hosted Ubuntu runner

    steps:
      - name: Check out code
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: eu-west-2

      - name: Login to Amazon ECR
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build, Tag, and Push Docker image
        run: |
          IMAGE_REPO_NAME=fastapi-app
          IMAGE_TAG=latest
          ACCOUNT_ID=430006376054

          docker build -t $IMAGE_REPO_NAME:$IMAGE_TAG .
          docker tag $IMAGE_REPO_NAME:$IMAGE_TAG $ACCOUNT_ID.dkr.ecr.eu-west-2.amazonaws.com/$IMAGE_REPO_NAME:$IMAGE_TAG
          docker push $ACCOUNT_ID.dkr.ecr.eu-west-2.amazonaws.com/$IMAGE_REPO_NAME:$IMAGE_TAG

      - name: SSH and deploy on EC2
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ubuntu
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            # Retrieve ECR login password and store it in a variable
            ECR_PASSWORD=$(aws ecr get-login-password --region eu-west-2)
            # Use the variable in the docker login command
            docker login --username AWS --password "$ECR_PASSWORD" 430006376054.dkr.ecr.eu-west-2.amazonaws.com

            docker pull 430006376054.dkr.ecr.eu-west-2.amazonaws.com/fastapi-app:latest
            docker stop my-fastapi-app || true
            docker rm my-fastapi-app || true
            docker run -d --name my-fastapi-app -p 80:80 430006376054.dkr.ecr.eu-west-2.amazonaws.com/fastapi-app:latest
